# general settings
name: train_SwinIRLight_SRx2_P48W8_DIV2K_B16G1_prune
model_type: SwinIRModel
scale: 2
num_gpu: auto
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_train_HR_sub_prune
    dataroot_lq: datasets/DIV2K/DIV2K_train_LR_bicubic/X2_sub_prune
    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 1
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: datasets/Set5/GTmod12
    dataroot_lq: datasets/Set5/LRbicx2
    io_backend:
      type: disk

# network structures
network_g:
  type: SwinIR
  upscale: 2
  in_chans: 3
  img_size: 64
  window_size: 8
  img_range: 1.
  depths: [6, 6, 6, 6]
  embed_dim: 60
  num_heads: [6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffledirect'
  resi_connection: '1conv'

# path
path:
  pretrain_network_g: experiments/pretrained_models/002_lightweightSR_DIV2K_s64w8_SwinIR-S_x2.pth
  strict_load_g: true #false
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: OBProxSG
    lr: !!float 5e-3
    lambda_: !!float 1e-4
    # L1 regularization weight
    epochSize: 32592
    # number of batches per epoch: num_iter_per_epoch*(dataset_opt['batch_size_per_gpu'] * opt['world_size'])
    eps: 0.0001
    # one from AdaCoF
    Np: 25
    # int(args.epochs / 10) one from AdaCoF

  scheduler:
    type: MultiStepLR
    milestones: ~
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: CharbonnierLoss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e3
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
